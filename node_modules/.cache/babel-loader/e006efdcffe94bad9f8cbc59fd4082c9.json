{"ast":null,"code":"var _jsxFileName = \"/home/sebuntu/Desktop/Personal-projects/Pruebas t\\xE9cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { fetchAPI, initUrl } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery('listData', fetchAPI);\n  const characters = data === null || data === void 0 ? void 0 : data.results;\n  const info = data === null || data === void 0 ? void 0 : data.info; //setCharacters(data.results);\n  // data ? setCharacters(data.results) : setCharacters([]);\n  // data ? setInfo(data.info) : setInfo([]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } // const onPrev = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.prev}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // console.log(characters)\n  // const onNext = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.next}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: characters ? characters.map(char => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: char.id,\n          image: char.image,\n          name: char.name\n        }, char.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"rCudFd1hiR08fJ2zuPhSG8h1qdE=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/sebuntu/Desktop/Personal-projects/Pruebas t√©cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx"],"names":["react","useState","useEffect","fetchAPI","initUrl","Card","Pagination","Filter","useQuery","List","isLoading","isError","data","error","characters","results","info","message","map","char","id","image","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,uBAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCL,QAAQ,CAAC,UAAD,EAAaL,QAAb,CAApD;AAEA,QAAMW,UAAU,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAAzB;AACA,QAAMC,IAAI,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,IAAnB,CAL6B,CAM7B;AACA;AACA;;AAEA,MAAIN,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAIE,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAf4B,CAiB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAA,4BAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGH,UAAU,GACPA,UAAU,CAACI,GAAX,CAAgBC,IAAD,IAAU;AACvB,4BACE,QAAC,IAAD;AAEE,UAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,UAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,UAAA,IAAI,EAAEF,IAAI,CAACG;AAJb,WACOH,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATD,CADO,GAWP;AAZN;AAAA;AAAA;AAAA;AAAA,YAPF,eAqBE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAyBD;;GAnEuBX,I;UAEsBD,Q;;;KAFtBC,I","sourcesContent":["import react, { useState, useEffect } from 'react';\nimport { fetchAPI, initUrl } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery } from 'react-query';\n\nexport default function List() {\n  \n  const { isLoading, isError, data, error } = useQuery('listData', fetchAPI);\n  \n  const characters = data?.results\n  const info = data?.info\n  //setCharacters(data.results);\n  // data ? setCharacters(data.results) : setCharacters([]);\n  // data ? setInfo(data.info) : setInfo([]);\n\n  if (isLoading) {\n    return <p>Loading....</p>;\n  }\n  if (isError) {\n    return <p>{error.message}</p>;\n  }\n\n  // const onPrev = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.prev}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // console.log(characters)\n  // const onNext = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.next}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  return (\n    <>\n      {/* <Pagination\n        prev={info.prev}\n        next={info.next}\n        onPrev={onPrev}\n        onNext={onNext}\n      /> */}\n      <div className='list-container'>\n        {characters\n          ? characters.map((char) => {\n              return (\n                <Card\n                  key={char.id}\n                  id={char.id}\n                  image={char.image}\n                  name={char.name}\n                />\n              );\n            })\n          : null}\n      </div>\n      <Pagination />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}