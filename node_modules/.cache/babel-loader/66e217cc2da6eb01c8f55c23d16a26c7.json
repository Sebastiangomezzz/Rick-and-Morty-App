{"ast":null,"code":"var _jsxFileName = \"/home/sebuntu/Desktop/Personal-projects/Pruebas t\\xE9cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/pages/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { fetchDetailsAPI, initUrl } from '../services/fetchData';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Details() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n\n  const fetchDetailsAPI = async (initUrl, id) => {\n    const response = await axios.get(`https://rickandmortyapi.com/api/character/${id}`);\n    const {\n      charData\n    } = response;\n    return charData;\n  };\n\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery('detailsData', fetchDetailsAPI);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this);\n  }\n\n  console.log(data.results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data === null || data === void 0 ? void 0 : data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data === null || data === void 0 ? void 0 : data.image,\n        alt: \"data image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Species: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), data === null || data === void 0 ? void 0 : data.species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Gender: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), data === null || data === void 0 ? void 0 : data.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Details, \"GW5XagX5UbpHeDyu3OTpB7Xn2dQ=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/sebuntu/Desktop/Personal-projects/Pruebas tÃ©cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/pages/Details.jsx"],"names":["useParams","fetchDetailsAPI","initUrl","React","useState","useEffect","Link","useQuery","axios","Details","id","response","get","charData","isLoading","isError","data","error","message","console","log","results","name","image","species","gender"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,uBAAzC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAASV,SAAS,EAAxB;;AACA,QAAMC,eAAe,GAAG,OAAOC,OAAP,EAAgBQ,EAAhB,KAAuB;AAC7C,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,6CAA4CF,EAAG,EAA1D,CAAvB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAeF,QAArB;AACA,WAAOE,QAAP;AACD,GAJD;;AAKA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCV,QAAQ,CAAC,aAAD,EAAgBN,eAAhB,CAApD;;AAEA,MAAIa,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAIE,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAELC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,OAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKL,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEM;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,KAAhB;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGP,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEQ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGR,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAES,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBC;;GAlCQhB,O;UACUT,S,EAM6BO,Q;;;KAPvCE,O;AAoCT,eAAeA,OAAf","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchDetailsAPI, initUrl } from '../services/fetchData';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\n\nfunction Details() {\n    const { id } = useParams();\n    const fetchDetailsAPI = async (initUrl, id) => {\n      const response = await axios.get(`https://rickandmortyapi.com/api/character/${id}`);\n      const { charData } = response;\n      return charData;\n    };\n    const { isLoading, isError, data, error } = useQuery('detailsData', fetchDetailsAPI);\n\n    if (isLoading) {\n      return <p>Loading....</p>;\n    }\n    if (isError) {\n      return <p>{error.message}</p>;\n    }\n\nconsole.log(data.results);\nreturn (\n  <div className='details-container'>\n    <Link to='/'>Back</Link>\n    <div className='details'>\n      <h1>{data?.name}</h1>\n      <img src={data?.image} alt='data image' />\n      <p>\n        <strong>Species: </strong>\n        {data?.species}\n      </p>\n      <p>\n        <strong>Gender: </strong>\n        {data?.gender}\n      </p>\n    </div>\n  </div>\n);\n}\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}