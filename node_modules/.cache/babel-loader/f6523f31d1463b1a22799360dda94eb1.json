{"ast":null,"code":"var _jsxFileName = \"/home/sebuntu/Desktop/Personal-projects/Pruebas t\\xE9cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { fetchAPI, initUrl } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery('listData', fetchAPI);\n  const results = data.results;\n  setdata.info;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onPrev = () => {\n    setCharacters([]);\n    axios.get(`${info.prev}`).then(res => {\n      setDetails(res.data);\n      setCharacters(data.results);\n      setInfo(data.info);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onNext = () => {\n    setCharacters([]);\n    fetchAPI(info.next).then(data => {\n      setCharacters(data.results);\n      setInfo(data.info);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      prev: info.prev,\n      next: info.next,\n      onPrev: onPrev,\n      onNext: onNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: results.map(char => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: char.id,\n          image: char.image,\n          name: char.name\n        }, char.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"UBeEGvlal7YN2BezeOsPveMheXo=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/sebuntu/Desktop/Personal-projects/Pruebas t√©cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx"],"names":["react","useState","useEffect","fetchAPI","initUrl","Card","Pagination","Filter","useQuery","List","characters","setCharacters","info","setInfo","isLoading","isError","data","error","results","setdata","message","onPrev","axios","get","prev","then","res","setDetails","catch","err","console","log","onNext","next","map","char","id","image","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,uBAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCT,QAAQ,CAAC,UAAD,EAAaL,QAAb,CAApD;AAEA,QAAMe,OAAO,GAAGF,IAAI,CAACE,OAArB;AACAC,EAAAA,OAAO,CAACP,IAAR;;AAEA,MAAIE,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAIE,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,MAAM,GAAG,MAAM;AACnBV,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAW,IAAAA,KAAK,CACJC,GADD,CACM,GAAEX,IAAI,CAACY,IAAK,EADlB,EAECC,IAFD,CAEOC,GAAD,IAAS;AACbC,MAAAA,UAAU,CAACD,GAAG,CAACV,IAAL,CAAV;AACAL,MAAAA,aAAa,CAACK,IAAI,CAACE,OAAN,CAAb;AACAL,MAAAA,OAAO,CAACG,IAAI,CAACJ,IAAN,CAAP;AACC,KANH,EAOGgB,KAPH,CAOUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH;AAUD,GAZD;;AAaA,QAAMG,MAAM,GAAG,MAAM;AACnBrB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAR,IAAAA,QAAQ,CAACS,IAAI,CAACqB,IAAN,CAAR,CACGR,IADH,CACST,IAAD,IAAU;AACdL,MAAAA,aAAa,CAACK,IAAI,CAACE,OAAN,CAAb;AACAL,MAAAA,OAAO,CAACG,IAAI,CAACJ,IAAN,CAAP;AACD,KAJH,EAKGgB,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACb,KAAR,CAAcY,GAAd;AACD,KAPH;AAQD,GAVD;;AAWA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEjB,IAAI,CAACY,IADb;AAEE,MAAA,IAAI,EAAEZ,IAAI,CAACqB,IAFb;AAGE,MAAA,MAAM,EAAEZ,MAHV;AAIE,MAAA,MAAM,EAAEW;AAJV;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGd,OAAO,CAACgB,GAAR,CAAaC,IAAD,IAAU;AACrB,4BACE,QAAC,IAAD;AAEE,UAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,UAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,UAAA,IAAI,EAAEF,IAAI,CAACG;AAJb,WACOH,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAmBE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AAuBD;;GA/DuB3B,I;UAIsBD,Q;;;KAJtBC,I","sourcesContent":["import react, { useState, useEffect } from 'react';\nimport { fetchAPI, initUrl } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery } from 'react-query'\nexport default function List() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  \n  const { isLoading, isError, data, error } = useQuery('listData', fetchAPI)\n  \n  const results = data.results\n  setdata.info\n\n  if (isLoading) {\n    return <p>Loading....</p>;\n  }\n  if (isError) {\n    return <p>{error.message}</p>;\n  }\n\n  const onPrev = () => {\n    setCharacters([]);\n    axios\n    .get(`${info.prev}`)\n    .then((res) => {\n      setDetails(res.data);\n      setCharacters(data.results);\n      setInfo(data.info);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const onNext = () => {\n    setCharacters([]);\n    fetchAPI(info.next)\n      .then((data) => {\n        setCharacters(data.results);\n        setInfo(data.info);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  return (\n    <>\n      <Pagination\n        prev={info.prev}\n        next={info.next}\n        onPrev={onPrev}\n        onNext={onNext}\n      />\n      <div className='list-container'>\n        {results.map((char) => {\n          return (\n            <Card\n              key={char.id}\n              id={char.id}\n              image={char.image}\n              name={char.name}\n            />\n          );\n        })}\n      </div>\n      <Pagination />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}