{"ast":null,"code":"var _jsxFileName = \"/home/sebuntu/Desktop/Personal-projects/Pruebas t\\xE9cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { fetchAPI } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState('');\n  const queryClient = useQueryClient();\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery(['listData', page, filter], () => fetchAPI(page, filter));\n  let characters = data === null || data === void 0 ? void 0 : data.results;\n  let info = data === null || data === void 0 ? void 0 : data.info;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data.hasMore) {\n      queryClient.prefetchQuery(['listData', page + 1], () => fetchAPI(page + 1));\n    }\n  }, [data, page, queryClient]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      onSetFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      prev: info.prev,\n      next: info.next,\n      onPrev: () => {\n        setPage(page - 1);\n      },\n      onNext: () => {\n        setPage(page + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: characters ? characters.map(char => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          page: page,\n          filter: filter,\n          id: char.id,\n          image: char.image,\n          name: char.name\n        }, char.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"yOLBPlZgsz+wisu1UtrpvmbYnsc=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/sebuntu/Desktop/Personal-projects/Pruebas tÃ©cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx"],"names":["react","useState","useEffect","fetchAPI","Card","Pagination","Filter","useQuery","useQueryClient","List","page","setPage","filter","setFilter","queryClient","isLoading","isError","data","error","characters","results","info","message","hasMore","prefetchQuery","prev","next","map","char","id","image","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMa,WAAW,GAAGN,cAAc,EAAlC;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCX,QAAQ,CAAC,CAAC,UAAD,EAAaG,IAAb,EAAmBE,MAAnB,CAAD,EAA6B,MAAMT,QAAQ,CAACO,IAAD,EAAOE,MAAP,CAA3C,CAApD;AAEA,MAAIO,UAAU,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAAvB;AACA,MAAIC,IAAI,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,IAAjB;;AAEA,MAAIN,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAIE,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACFpB,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIe,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEM,OAAV,EAAmB;AACjBT,MAAAA,WAAW,CAACU,aAAZ,CAA0B,CAAC,UAAD,EAAad,IAAI,GAAG,CAApB,CAA1B,EAAkD,MAChDP,QAAQ,CAACO,IAAI,GAAG,CAAR,CADV;AAGD;AACF,GANO,EAML,CAACO,IAAD,EAAOP,IAAP,EAAaI,WAAb,CANK,CAAT;AAOC,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,WAAW,EAAED;AADf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEQ,IAAI,CAACI,IADb;AAEE,MAAA,IAAI,EAAEJ,IAAI,CAACK,IAFb;AAGE,MAAA,MAAM,EAAE,MAAM;AACZf,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OALH;AAME,MAAA,MAAM,EAAE,MAAM;AACZC,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGS,UAAU,GACPA,UAAU,CAACQ,GAAX,CAAgBC,IAAD,IAAU;AACvB,4BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAElB,IADR;AAEE,UAAA,MAAM,EAAEE,MAFV;AAIE,UAAA,EAAE,EAAEgB,IAAI,CAACC,EAJX;AAKE,UAAA,KAAK,EAAED,IAAI,CAACE,KALd;AAME,UAAA,IAAI,EAAEF,IAAI,CAACG;AANb,WAGOH,IAAI,CAACC,EAHZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXD,CADO,GAaP;AAdN;AAAA;AAAA;AAAA;AAAA,YAdF,eA8BE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA,kBADF;AAkCD;;GAxDuBpB,I;UAGFD,c,EACwBD,Q;;;KAJtBE,I","sourcesContent":["import react, { useState, useEffect } from 'react';\nimport { fetchAPI } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery, useQueryClient } from 'react-query';\n\nexport default function List() {\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState('');\n  const queryClient = useQueryClient();\n  const { isLoading, isError, data, error } = useQuery(['listData', page, filter], () => fetchAPI(page, filter));\n  \n  let characters = data?.results;\n  let info = data?.info;\n\n  if (isLoading) {\n    return <p>Loading....</p>;\n  }\n  if (isError) {\n    return <p>{error.message}</p>;  \n  }\n useEffect(() => {\n    if (data?.hasMore) {\n      queryClient.prefetchQuery(['listData', page + 1], () =>\n        fetchAPI(page + 1)\n      );\n    }\n  }, [data, page, queryClient]);\n  return (\n    <>\n      <Filter\n        onSetFilter={setFilter}\n      />\n      <Pagination\n        prev={info.prev}\n        next={info.next}\n        onPrev={() => {\n          setPage(page - 1);\n        }}\n        onNext={() => {\n          setPage(page + 1);\n        }}\n      />\n      <div className='list-container'>\n        {characters\n          ? characters.map((char) => {\n              return (\n                <Card\n                  page={page}\n                  filter={filter}\n                  key={char.id}\n                  id={char.id}\n                  image={char.image}\n                  name={char.name}\n                />\n              );\n            })\n          : null}\n      </div>\n      <Pagination />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}