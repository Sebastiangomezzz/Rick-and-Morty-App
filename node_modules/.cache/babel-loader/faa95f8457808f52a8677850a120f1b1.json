{"ast":null,"code":"var _jsxFileName = \"/home/sebuntu/Desktop/Personal-projects/Pruebas t\\xE9cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { fetchAPI, initUrl } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery('listData', fetchAPI); // const results = data.results;\n  // const queryInfo = data.info;\n  // setInfo(queryInfo);\n  // if (isLoading) {\n  //   return <p>Loading....</p>;\n  // }\n  // if (isError) {\n  //   return <p>{error.message}</p>;\n  // }\n  // const onPrev = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.prev}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // const onNext = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.next}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"UBeEGvlal7YN2BezeOsPveMheXo=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/sebuntu/Desktop/Personal-projects/Pruebas t√©cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx"],"names":["react","useState","useEffect","fetchAPI","initUrl","Card","Pagination","Filter","useQuery","List","characters","setCharacters","info","setInfo","isLoading","isError","data","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,uBAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCT,QAAQ,CAAC,UAAD,EAAaL,QAAb,CAApD,CAJ6B,CAM7B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA,4BAOE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAPF,eAmBE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AAuBD;;GAhEuBM,I;UAIsBD,Q;;;KAJtBC,I","sourcesContent":["import react, { useState, useEffect } from 'react';\nimport { fetchAPI, initUrl } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery } from 'react-query';\nexport default function List() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n\n  const { isLoading, isError, data, error } = useQuery('listData', fetchAPI);\n\n  // const results = data.results;\n  // const queryInfo = data.info;\n  // setInfo(queryInfo);\n\n  // if (isLoading) {\n  //   return <p>Loading....</p>;\n  // }\n  // if (isError) {\n  //   return <p>{error.message}</p>;\n  // }\n\n  // const onPrev = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.prev}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // const onNext = () => {\n  //   setCharacters([]);\n  //   axios\n  //     .get(`${info.next}`)\n  //     .then((res) => {\n  //       setCharacters(res.results);\n  //       setInfo(res.info);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  return (\n    <>\n      {/* <Pagination\n        prev={info.prev}\n        next={info.next}\n        onPrev={onPrev}\n        onNext={onNext}\n      /> */}\n      <div className='list-container'>\n        {/* {results.map((char) => {\n          return (\n            <Card\n              key={char.id}\n              id={char.id}\n              image={char.image}\n              name={char.name}\n            />\n          );\n        })} */}\n      </div>\n      <Pagination />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}