{"ast":null,"code":"var _jsxFileName = \"/home/sebuntu/Desktop/Personal-projects/Pruebas t\\xE9cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAPI } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery, useQueryClient } from 'react-query';\nimport logo from '../images/Rick-And-Morty-PNG-File.png';\nimport notfound from '../images/notfound.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState('');\n  const queryClient = useQueryClient();\n  const {\n    isError,\n    data,\n    error\n  } = useQuery(['listData', page, filter], () => fetchAPI(page, filter), {\n    keepPreviousData: true,\n    staleTime: 5000\n  });\n  let characters = data === null || data === void 0 ? void 0 : data.results;\n  let info = data === null || data === void 0 ? void 0 : data.info;\n  useEffect(() => {\n    if (localStorage.getItem('filter') !== filter) {\n      setPage(1);\n      localStorage.setItem('filter', filter);\n    }\n\n    if (data !== null && data !== void 0 && data.hasMore) {\n      queryClient.prefetchQuery(['listData', page + 1], () => fetchAPI(page + 1));\n    }\n  }, [data, page, queryClient]); // if (isLoading) {\n  //   return <p>Loading....</p>;\n  // }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container error\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"page-title\",\n          src: logo,\n          alt: \"rick and morty logo image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: notfound,\n            alt: \"notfound-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \"There was an Error!!( You )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"page-title\",\n        src: logo,\n        alt: \"rick and morty logo image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-pagination-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-pagination-container\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          onSetFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          prev: info === null || info === void 0 ? void 0 : info.prev,\n          next: info === null || info === void 0 ? void 0 : info.next,\n          onPrev: () => {\n            if (page === 1) {\n              return setPage(page);\n            } else setPage(page - 1);\n          },\n          onNext: () => {\n            if (info.next === null) {\n              return setPage(page);\n            } else setPage(page + 1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: characters ? characters.map(char => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            page: page,\n            filter: filter,\n            id: char.id,\n            image: char.image,\n            name: char.name,\n            status: char.status,\n            species: char.species,\n            gender: char.gender,\n            place: char.location.name\n          }, char.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        prev: info === null || info === void 0 ? void 0 : info.prev,\n        next: info === null || info === void 0 ? void 0 : info.next,\n        onPrev: () => {\n          if (page === 1) {\n            return setPage(page);\n          } else setPage(page - 1);\n        },\n        onNext: () => {\n          if (info.next === null) {\n            return setPage(page);\n          } else setPage(page + 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"JaSRUsmbkbSuFLfdwAlm/3s/TTo=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/sebuntu/Desktop/Personal-projects/Pruebas t√©cnicas/wbo-react-sebastiangomezzz/rick-and-morty-app/src/components/List.jsx"],"names":["React","useState","useEffect","fetchAPI","Card","Pagination","Filter","useQuery","useQueryClient","logo","notfound","List","page","setPage","filter","setFilter","queryClient","isError","data","error","keepPreviousData","staleTime","characters","results","info","localStorage","getItem","setItem","hasMore","prefetchQuery","prev","next","map","char","id","image","name","status","species","gender","location"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchAPI } from '../services/fetchData';\nimport Card from './Card';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport { useQuery, useQueryClient } from 'react-query';\nimport logo from '../images/Rick-And-Morty-PNG-File.png';\nimport notfound from '../images/notfound.png';\n\nexport default function List() {\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState('');\n\n  const queryClient = useQueryClient();\n  const { isError, data, error } = useQuery(\n    ['listData', page, filter],\n    () => fetchAPI(page, filter),\n    {\n      keepPreviousData: true,\n      staleTime: 5000\n    }\n  );\n  let characters = data?.results;\n  let info = data?.info;\n  useEffect(() => {\n    if (localStorage.getItem('filter') !== filter) {\n      setPage(1);\n      localStorage.setItem('filter', filter);\n    }\n    if (data?.hasMore) {\n      queryClient.prefetchQuery(['listData', page + 1], () => fetchAPI(page + 1));\n    }\n  }, [data, page, queryClient]);\n\n  // if (isLoading) {\n  //   return <p>Loading....</p>;\n  // }\n  if (isError) {\n    return (\n      <>\n        <div className=\"title-container error\">\n          <img className=\"page-title\" src={logo} alt=\"rick and morty logo image\" />\n          <div className=\"error-image\">\n            <img src={notfound} alt=\"notfound-image\" />\n            There was an Error!!( You )\n          </div>\n        </div>\n      </>\n    );\n  }\n  return (\n    <>\n      <div className=\"title-container\">\n        <img className=\"page-title\" src={logo} alt=\"rick and morty logo image\" />\n      </div>\n      <div className=\"filter-pagination-list-container\">\n        <div className=\"filter-pagination-container\">\n          <Filter onSetFilter={setFilter} />\n          <Pagination\n            prev={info?.prev}\n            next={info?.next}\n            onPrev={() => {\n              if (page === 1) {\n                return setPage(page);\n              } else setPage(page - 1);\n            }}\n            onNext={() => {\n              if (info.next === null) {\n                return setPage(page);\n              } else setPage(page + 1);\n            }}\n          />\n        </div>\n\n        <div className=\"list-container\">\n          {characters\n            ? characters.map((char) => {\n                return (\n                  <Card\n                    page={page}\n                    filter={filter}\n                    key={char.id}\n                    id={char.id}\n                    image={char.image}\n                    name={char.name}\n                    status={char.status}\n                    species={char.species}\n                    gender={char.gender}\n                    place={char.location.name}\n                  />\n                );\n              })\n            : null}\n        </div>\n        <Pagination\n          prev={info?.prev}\n          next={info?.next}\n          onPrev={() => {\n            if (page === 1) {\n              return setPage(page);\n            } else setPage(page - 1);\n          }}\n          onNext={() => {\n            if (info.next === null) {\n              return setPage(page);\n            } else setPage(page + 1);\n          }}\n        />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}